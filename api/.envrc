#!/usr/bin/env bash
source_up

if [ -f "./flake.nix" ]; then
    FLAKE_PATH="."
else
    FLAKE_PATH="github:bruno-ebstein-pass-culture/pass-culture-main/nix?dir=api"
fi
use flake "${FLAKE_PATH}" # put in your environnement _almost_ everything needed when you use [Nix](https://nixos.org)

strict_env

# needed to run commands througth Flask with `flask shell`
dotenv ../env_file
dotenv ../development_env_file
dotenv ./local_env_file

# override .env file configuration
# export POSTGRES_USER="pass_culture"
# export POSTGRES_PASSWORD="passq"
# export POSTGRES_DB="pass_culture"
# export DATABASE_URL="postgresql://pass_culture:passq@localhost:5434/pass_culture"
# export DATABASE_URL="postgresql://pass_culture:passq@host.docker.internal/pass_culture"
# export REDIS_URL=redis://localhost:6379

# export POSTGRES_HOST="localhost:5434"
# export POSTGRES_HOST="host.docker.internal:5434"

# needed to start Flask locally with `flask run`
export FLASK_ENV="development"
export FLASK_APP="./src/pcapi/app.py"

# connect to local SQL with `pc psql`

layout python3

if ! has bpython; then
    pip install bpython # python with autocompletion ; broken on Nix
fi
export PYTHONBREAKPOINT="bpdb.set_trace" # `breakpoint()` with autocompletion

if ! ( (has flask) && (has pylint) && (has pytest) && (has black)); then
    path_add LIBRARY_PATH /usr/local/opt/openssl/lib/ # needed to install psycopg2
    pip install --requirement requirements.txt
fi

if ! python -c 'import pcapi' >/dev/null 2>&1; then
    pip install --editable .
fi
python -c 'import pcapi' && echo 'self install ok' || echo 'self install dead'

# export SQLALCHEMY_ECHO=1 # display generated SQL requests by SQLAlchemy

# needed to use `git-gamble`
export GAMBLE_TEST_COMMAND="sh -c 'pytest $""(git list-modified-files | rg '/tests/' | sed 's@api/@@')'"
export GAMBLE_TEST_COMMAND="sh -c 'pytest -s -vv $""(git list-modified-files | rg '/tests/' | sed 's@api/@@')'"
